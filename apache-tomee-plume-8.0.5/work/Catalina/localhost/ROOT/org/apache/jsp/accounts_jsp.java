/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat (TomEE)/9.0.39 (8.0.5)
 * Generated at: 2020-12-08 05:39:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPackage.classes.User;
import java.util.ArrayList;

public final class accounts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("myPackage.classes.User");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      myPackage.DatabaseClass pDAO = null;
      pDAO = (myPackage.DatabaseClass) _jspx_page_context.getAttribute("pDAO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pDAO == null){
        pDAO = new myPackage.DatabaseClass();
        _jspx_page_context.setAttribute("pDAO", pDAO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("\n");
      out.write("<!-- SIDEBAR -->\n");
      out.write("\t\t\t<div class=\"sidebar\" style=\"background-image: url(sidebar-1.jpg)\">\n");
      out.write("\t\t\t\t<div class=\"sidebar-background\" >\n");
      out.write("\t\t\t\t\t<h2 class=\"logo-text\">\n");
      out.write("\t\t\t\t\t\tOnline Examination System\n");
      out.write("\t\t\t\t\t</h2>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<div class=\"left-menu\">\n");
      out.write("\t\t\t\t\t\t<a  href=\"adm-page.jsp?pgprt=0\"><h2>Profile</h2></a>\n");
      out.write("\t\t\t\t\t\t<a href=\"adm-page.jsp?pgprt=2\"><h2>Courses</h2></a>\n");
      out.write("                                                <a href=\"adm-page.jsp?pgprt=3\"><h2>Questions</h2></a>\n");
      out.write("\t\t\t\t\t\t<a class=\"active\" href=\"adm-page.jsp?pgprt=1\"><h2>Accounts</h2></a>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("            <!-- CONTENT AREA -->\n");
      out.write("\t\t\t<div class=\"content-area\">\n");
      out.write("                            <div class=\"inner\" style=\"margin-top: 50px\">\n");
      out.write("                                <div class=\"title\" style=\"margin-top: -30px\">List of All Registered Persons</div>\n");
      out.write("       \n");
      out.write("                                <br>\n");
      out.write("                                <br>\n");
      out.write("                                <br/>\n");
      out.write("                                <a href=\"register.html\" class=\"button\"><span class=\"add-btn\" style=\"margin-left: 80px;\">Add New Person</span></a>\n");
      out.write("           <br>\n");
      out.write("           \n");
      out.write("           \n");
      out.write("                       <table id=\"one-column-emphasis\" >\n");
      out.write("    <colgroup>\n");
      out.write("    \t<col class=\"oce-first\" />\n");
      out.write("    </colgroup>\n");
      out.write("    <thead>\n");
      out.write("    \t<tr>\n");
      out.write("        \t<th scope=\"col\">Name</th>\n");
      out.write("                \n");
      out.write("            <th scope=\"col\">email</th>\n");
      out.write("            <th scope=\"col\">City</th>\n");
      out.write("            <th scope=\"col\">Address</th>\n");
      out.write("            <th scope=\"col\">Action</th>\n");
      out.write("            \n");
      out.write("        </tr>\n");
      out.write("    </thead>\n");
      out.write("    <tbody>\n");
      out.write("           ");

              ArrayList list=pDAO.getAllUsers();
              User user;
              for(int i=0;i<list.size();i++){
                  user=(User)list.get(i);
                  if(user.getUserId()!= Integer.parseInt(session.getAttribute("userId").toString())){
               
      out.write("\n");
      out.write("   \n");
      out.write("    \t<tr>\n");
      out.write("        \t<td>");
      out.print(user.getFirstName()+" "+user.getLastName() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print(user.getEmail() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print(user.getCity() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print(user.getAddress() );
      out.write("</td>\n");
      out.write("            <td><a href=\"controller.jsp?page=accounts&operation=del&uid=");
      out.print(user.getUserId() );
      out.write("\" \n");
      out.write("                  onclick=\"return confirm('Are you sure you want to delete this ?');\">\n");
      out.write("                <div class=\"delete-btn\" style=\"max-width: 40px;font-size: 17px; padding: 3px\">X</div>\n");
      out.write("                </a></td>\n");
      out.write("            \n");
      out.write("        </tr>\n");
      out.write("         \n");
      out.write("               \n");
      out.write("               \n");
      out.write("               ");

                  }
                  } 
      out.write("\n");
      out.write("               \n");
      out.write("                </tbody>\n");
      out.write("</table>\n");
      out.write("           \n");
      out.write("    \n");
      out.write("                            </div>\n");
      out.write("                        </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
