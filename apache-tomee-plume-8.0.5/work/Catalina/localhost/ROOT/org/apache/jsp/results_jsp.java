/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat (TomEE)/9.0.39 (8.0.5)
 * Generated at: 2020-12-08 05:40:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPackage.classes.Answers;
import myPackage.classes.Exams;
import myPackage.classes.Questions;
import java.util.ArrayList;

public final class results_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("myPackage.classes.Questions");
    _jspx_imports_classes.add("myPackage.classes.Answers");
    _jspx_imports_classes.add("myPackage.classes.Exams");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      myPackage.DatabaseClass pDAO = null;
      pDAO = (myPackage.DatabaseClass) _jspx_page_context.getAttribute("pDAO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pDAO == null){
        pDAO = new myPackage.DatabaseClass();
        _jspx_page_context.setAttribute("pDAO", pDAO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("<!-- SIDEBAR -->\n");
      out.write("\t\t\t<div class=\"sidebar\" style=\"background-image: url(sidebar-1.jpg)\">\n");
      out.write("\t\t\t\t<div class=\"sidebar-background\" >\n");
      out.write("\t\t\t\t\t<h2 class=\"logo-text\">\n");
      out.write("\t\t\t\t\t\tOnline Examination System\n");
      out.write("\t\t\t\t\t</h2>\n");
      out.write("\t\t\t\t\t<div class=\"left-menu\">\n");
      out.write("\t\t\t\t\t\t<a  href=\"std-page.jsp?pgprt=0\"><h2>Profile</h2></a>\n");
      out.write("\t\t\t\t\t\t<a href=\"std-page.jsp?pgprt=1\"><h2>Exams</h2></a>\n");
      out.write("\t\t\t\t\t\t<a class=\"active\" href=\"std-page.jsp?pgprt=2\"><h2>Results</h2></a>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("                       </div>\n");
      out.write("               <!-- CONTENT AREA -->\n");
      out.write("\t\t\t<div class=\"content-area\">\n");
      out.write("                            <div class=\"panel\" style=\"float: left;max-width: 900px\">\n");
      out.write("                                \n");
      out.write("        ");

            if(request.getParameter("eid")==null){
        
      out.write("\n");
      out.write("        <div class=\"title\">All Results</div>\n");
      out.write("           <table id=\"rounded-corner\">\n");
      out.write("    <thead>\n");
      out.write("    \t<tr>\n");
      out.write("        \t<th scope=\"col\" class=\"rounded-company\">Date</th>\n");
      out.write("            <th scope=\"col\" class=\"rounded-q1\">Course</th>\n");
      out.write("            <th scope=\"col\" class=\"rounded-q2\">Time</th>\n");
      out.write("            <th scope=\"col\" class=\"rounded-q3\">Status</th>\n");
      out.write("            <th scope=\"col\" class=\"rounded-q4\">Action</th>\n");
      out.write("        </tr>\n");
      out.write("    </thead>\n");
      out.write("        \n");
      out.write("    <tbody>\n");
      out.write("        \n");
      out.write("        ");

            ArrayList list=pDAO.getAllResultsFromExams(Integer.parseInt(session.getAttribute("userId").toString()));
            for(int i=0;i<list.size();i++){
                Exams e=(Exams)list.get(i);
            
      out.write("\n");
      out.write("    \t<tr>\n");
      out.write("            <td>");
      out.print(e.getDate() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print(e.getcName() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print(e.getStartTime()+" - "+e.getEndTime());
      out.write("</td>\n");
      out.write("            ");
 if(e.getStatus()!=null){
                if(e.getStatus().equals("Pass")){
      out.write("\n");
      out.write("                <td style=\"background: #00cc33;color:white\">");
      out.print(e.getStatus());
      out.write("</td>\n");
      out.write("            ");
 }else{
      out.write("\n");
      out.write("            <td style=\"background: #ff3333;color:white\">");
      out.print(e.getStatus());
      out.write("</td>\n");
      out.write("            ");
 }
            }else{
      out.write("\n");
      out.write("            <td style=\"background: bisque ;\">Terminated</td>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("            <td><a href=\"std-page.jsp?pgprt=2&eid=");
      out.print(e.getExamId());
      out.write("\">Details</a></td>\n");
      out.write("        </tr>\n");
      out.write("       \n");
      out.write("       ");
 }
       
      out.write("\n");
      out.write("    </tbody>\n");
      out.write("</table>\n");
      out.write("       ");

            }else{
                
      out.write("\n");
      out.write("                <div class=\"title\">Result Details</div>\n");
      out.write("                <table id=\"gradient-style\" >\n");
      out.write("                \n");
      out.write("                ");

                ArrayList list=pDAO.getAllAnswersByExamId(Integer.parseInt(request.getParameter("eid")));
                for(int i=0;i<list.size();i++){
                    Answers a=(Answers) list.get(i);
                
            
      out.write("\n");
      out.write("\n");
      out.write("            \n");
      out.write("                <tr>\n");
      out.write("                    <td rowspan=\"2\">");
      out.print(i+1 );
      out.write(")</td>\n");
      out.write("                    <td colspan=\"2\">");
      out.print(a.getQuestion());
      out.write("</td>\n");
      out.write("                    <td rowspan=\"2\">");
      out.print(a.getStatus() );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr >\n");
      out.write("                    <td>");
      out.print("Your Ans: "+a.getAnswer());
      out.write("</td>\n");
      out.write("                    <td>");
      out.print("Correct Ans: "+a.getCorrectAns() );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"3\" style=\"background: white\"></td>\n");
      out.write("                ");

                }
                
      out.write("\n");
      out.write("            </table>\n");
      out.write("                    \n");
      out.write("            \n");
      out.write("            ");

            }
            
      out.write("\n");
      out.write("                            </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
